// <auto-generated />
using AssignmentTwo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AssignmentTwo.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AssignmentTwo.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Learn all about the theory of relativity!",
                            Name = "Physics 101",
                            Number = "P101"
                        },
                        new
                        {
                            Id = 2,
                            Description = "An examination of lifespan in the context of radiation exposure.",
                            Name = "Radiology In War",
                            Number = "R204"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Discover which moves more: the earth or the sun?",
                            Name = "Advanced Astronomy",
                            Number = "A4000"
                        });
                });

            modelBuilder.Entity("AssignmentTwo.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId")
                        .IsUnique();

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Email = "emc2@pub.edu",
                            FirstName = "Albert",
                            LastName = "Einstein"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Email = "rad@nobel.fr",
                            FirstName = "Marie",
                            LastName = "Curie"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Email = "stars@science.it",
                            FirstName = "Galileo",
                            LastName = "Galilei"
                        });
                });

            modelBuilder.Entity("AssignmentTwo.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "theskyisfalling@panic.now",
                            FirstName = "Chicken",
                            LastName = "Little",
                            Phone = "204-111-1111"
                        },
                        new
                        {
                            Id = 2,
                            Email = "comebacksheep@my.flock",
                            FirstName = "Bo",
                            LastName = "Peep",
                            Phone = "204-222-2222"
                        },
                        new
                        {
                            Id = 3,
                            Email = "spidersareyourfriend@nook.cranny",
                            FirstName = "Itsy",
                            LastName = "Bitsy",
                            Phone = "204-333-3333"
                        },
                        new
                        {
                            Id = 4,
                            Email = "baa@baa.com",
                            FirstName = "Black",
                            LastName = "Sheep",
                            Phone = "204-444-4444"
                        },
                        new
                        {
                            Id = 5,
                            Email = "helpmeup@kingdom.come",
                            FirstName = "Humpty",
                            LastName = "Dumpty",
                            Phone = "204-555-5555"
                        },
                        new
                        {
                            Id = 6,
                            Email = "ouchthatshot@candle.stick",
                            FirstName = "Jack",
                            LastName = "Nimble",
                            Phone = "204-666-6666"
                        });
                });

            modelBuilder.Entity("AssignmentTwo.StudentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 1,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 2,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 2,
                            StudentId = 5
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 3,
                            StudentId = 6
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 3,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 3,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 3,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 3,
                            StudentId = 4
                        });
                });

            modelBuilder.Entity("AssignmentTwo.Instructor", b =>
                {
                    b.HasOne("AssignmentTwo.Course", "Course")
                        .WithOne("Instructor")
                        .HasForeignKey("AssignmentTwo.Instructor", "CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssignmentTwo.StudentCourse", b =>
                {
                    b.HasOne("AssignmentTwo.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssignmentTwo.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
